{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","key","imdbId","getData","url","a","fetch","response","ok","Error","statusText","json","FindMovie","addMovie","useState","query","setQuery","isFindMovie","setFindMovie","newMovie","setNewMovie","findMovie","getMoviesFromApi","Response","Title","Plot","Poster","imdbID","console","error","message","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","cx","input","onChange","target","help","onClick","App","state","data","some","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a068c151.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ninterface Props {\n  movie: Movie | null;\n}\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  if (movie) {\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={movie.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{movie.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {movie.description}\n            <br />\n            <a href={movie.imdbUrl}>IMDB</a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map((movie) => (\n      <MovieCard key={movie.imdbId} movie={movie} />\n    ))}\n  </div>\n);\n","export const getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  if (!response.ok) {\n    throw new Error(response.statusText);\n  }\n\n  return response.json();\n};\n","import React, { FC, useState } from 'react';\nimport cx from 'classnames';\nimport { getData } from '../../api';\n\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  addMovie: (newMovie: Movie | null) => void;\n}\n\nexport const FindMovie: FC<Props> = ({ addMovie }) => {\n  const [query, setQuery] = useState('');\n  const [isFindMovie, setFindMovie] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    setFindMovie(false);\n    setNewMovie(null);\n  };\n\n  const findMovie = async () => {\n    if (!query) {\n      return;\n    }\n\n    try {\n      const getMoviesFromApi = await getData<NewMovie>(`https://www.omdbapi.com/?apikey=a3ae9a4e&t=${query}`);\n\n      if (getMoviesFromApi.Response === 'True') {\n        setNewMovie({\n          title: getMoviesFromApi.Title,\n          description: getMoviesFromApi.Plot,\n          imgUrl: getMoviesFromApi.Poster,\n          imdbUrl: `https://www.imdb.com/title/${getMoviesFromApi.imdbID}`,\n          imdbId: getMoviesFromApi.imdbID,\n        });\n        setQuery('');\n      } else {\n        setFindMovie(true);\n      }\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error.message);\n    }\n  };\n\n  const addMovieToList = () => {\n    addMovie(newMovie);\n    setQuery('');\n    setNewMovie(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={(event) => event.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className={cx({ input: true, 'is-danger': isFindMovie })}\n              onChange={handleChange}\n            />\n          </div>\n\n          <p className={cx({ help: true, 'is-danger': isFindMovie, error: !isFindMovie })}>\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={addMovieToList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {newMovie && <MovieCard movie={newMovie} />}\n      </div>\n    </>\n  );\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\ninterface AppState {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, AppState> {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (newMovie: Movie | null) => {\n    const { movies } = this.state;\n\n    if (newMovie === null) {\n      return;\n    }\n\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    this.setState(prevState => ({\n      movies: [...prevState.movies, newMovie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}